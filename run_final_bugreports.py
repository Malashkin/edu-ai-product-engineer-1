import glob
import json
import os
from analyze_sober_reviews import generate_bug_report_via_openai
from telegram_sender import send_bug_reports_to_telegram

def get_latest_file(pattern):
    files = glob.glob(os.path.join('output', pattern))
    if not files:
        print(f'–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –º–∞—Å–∫–µ: {pattern}')
        return None
    files.sort(key=os.path.getctime, reverse=True)
    return os.path.basename(files[0])

final_recommendations_file = get_latest_file('final_recommendations_*.json')
if not final_recommendations_file:
    raise FileNotFoundError('–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏!')

with open(os.path.join('output', final_recommendations_file), 'r', encoding='utf-8') as f:
    recommendations = json.load(f)

# –ò—â–µ–º –±–∞–≥–∏ —Ç–æ–ª—å–∫–æ –≤ high/medium/low_priority_recommendations –ø–æ category == 'bug_fixes'
bug_candidates = []
for priority_key in ['high_priority_recommendations', 'medium_priority_recommendations', 'low_priority_recommendations']:
    for item in recommendations.get(priority_key, []):
        if item.get('category') == 'bug_fixes':
            bug_text = f"{item.get('title', '')}\n{item.get('description', '')}"
            bug_candidates.append(bug_text)

if not bug_candidates:
    print('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –±–∞–≥–æ–≤ –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö!')
    exit(0)

from datetime import datetime
timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')

print(f"üêõ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è {len(bug_candidates)} –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤...")
for i, bug_text in enumerate(bug_candidates, 1):
    generate_bug_report_via_openai(bug_text, bug_index=i, timestamp=timestamp)

print(f"\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –≤ Telegram...")
try:
    success = send_bug_reports_to_telegram(timestamp)
    if success:
        print("‚úÖ –í—Å–µ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –≤ Telegram")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {str(e)}")
    print("üíæ –ë–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ –≤ –ø–∞–ø–∫–µ output/")

print(f"\nüéØ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! Timestamp: {timestamp}") 