import os
import json
import asyncio
import subprocess
from datetime import datetime
from telegram_mcp_client import TelegramMCPClient

class TelegramReportSender:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –∏ —É–ª—É—á—à–µ–Ω–∏–π –≤ Telegram"""
    
    def __init__(self, recipient_username: str = "@mmalashkin"):
        self.recipient = recipient_username
        self.client = None
        
    async def send_bug_reports(self, bugreports_timestamp: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
        
        Args:
            bugreports_timestamp (str): –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYYMMDD_HHMMSS
        """
        print(f"üêõ –û—Ç–ø—Ä–∞–≤–∫–∞ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –≤ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.recipient}...")
        
        # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤
        import glob
        pattern = f"output/bugreport_*_{bugreports_timestamp}.md"
        bug_files = glob.glob(pattern)
        
        if not bug_files:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –ø–æ –º–∞—Å–∫–µ: {pattern}")
            return False
        
        print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ {len(bug_files)} –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramMCPClient()
        try:
            if not await client.initialize():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram –∫–ª–∏–µ–Ω—Ç")
                return False
            
            sent_count = 0
            for i, bug_file in enumerate(bug_files, 1):
                try:
                    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                    with open(bug_file, 'r', encoding='utf-8') as f:
                        bug_content = f.read()
                    
                    # –û–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–ª–∏–º–∏—Ç Telegram 4096 —Å–∏–º–≤–æ–ª–æ–≤)
                    if len(bug_content) > 4000:
                        bug_content = bug_content[:3900] + "\\n\\n[...—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—Ä–µ–∑–∞–Ω–æ...]"
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message_text = f"üêõ **–ë–ê–ì-–†–ï–ü–û–†–¢ #{i}**\\n\\n{bug_content}"
                    result = await client.send_message(self.recipient, message_text)
                    
                    if result.get('success'):
                        print(f"‚úÖ –ë–∞–≥-—Ä–µ–ø–æ—Ä—Ç #{i} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (ID: {result.get('message_id')})")
                        sent_count += 1
                        
                        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                        await asyncio.sleep(2)
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–∞ #{i}: {result.get('error')}")
                        
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {bug_file}: {str(e)}")
            
            print(f"üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} –∏–∑ {len(bug_files)} –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤")
            return sent_count > 0
            
        finally:
            await client.close()
    
    async def send_improvements(self, improvements_timestamp: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—è–º –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É
        
        Args:
            improvements_timestamp (str): –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYYMMDD_HHMMSS
        """
        print(f"üí° –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—è–º –≤ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.recipient}...")
        
        # –ò—â–µ–º —Ñ–∞–π–ª—ã —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏
        import glob
        pattern = f"output/improvement_proposal_*_{improvements_timestamp}.md"
        improvement_files = glob.glob(pattern)
        
        if not improvement_files:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —É–ª—É—á—à–µ–Ω–∏–π –ø–æ –º–∞—Å–∫–µ: {pattern}")
            return False
        
        print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ {len(improvement_files)} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramMCPClient()
        try:
            if not await client.initialize():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram –∫–ª–∏–µ–Ω—Ç")
                return False
            
            sent_count = 0
            for i, improvement_file in enumerate(improvement_files, 1):
                try:
                    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                    with open(improvement_file, 'r', encoding='utf-8') as f:
                        improvement_content = f.read()
                    
                    # –û–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
                    if len(improvement_content) > 4000:
                        improvement_content = improvement_content[:3900] + "\\n\\n[...—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—Ä–µ–∑–∞–Ω–æ...]"
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message_text = f"üí° **–ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ #{i}**\\n\\n{improvement_content}"
                    result = await client.send_message(self.recipient, message_text)
                    
                    if result.get('success'):
                        print(f"‚úÖ –£–ª—É—á—à–µ–Ω–∏–µ #{i} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {result.get('message_id')})")
                        sent_count += 1
                        
                        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                        await asyncio.sleep(2)
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è #{i}: {result.get('error')}")
                        
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {improvement_file}: {str(e)}")
            
            print(f"üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} –∏–∑ {len(improvement_files)} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
            return sent_count > 0
            
        finally:
            await client.close()
    
    def send_bug_reports_sync(self, bugreports_timestamp: str):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤"""
        return asyncio.run(self.send_bug_reports(bugreports_timestamp))
    
    def send_improvements_sync(self, improvements_timestamp: str):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π"""
        return asyncio.run(self.send_improvements(improvements_timestamp))

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
def send_bug_reports_to_telegram(timestamp: str, recipient: str = "@mmalashkin"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã –≤ Telegram
    
    Args:
        timestamp (str): –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤
        recipient (str): –ü–æ–ª—É—á–∞—Ç–µ–ª—å –≤ Telegram
    """
    sender = TelegramReportSender(recipient)
    return sender.send_bug_reports_sync(timestamp)

def send_improvements_to_telegram(timestamp: str, recipient: str = "@mmalashkin"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—è–º –≤ Telegram
    
    Args:
        timestamp (str): –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–∏–π
        recipient (str): –ü–æ–ª—É—á–∞—Ç–µ–ª—å –≤ Telegram
    """
    sender = TelegramReportSender(recipient)
    return sender.send_improvements_sync(timestamp)

if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    import sys
    
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("python telegram_sender.py bugs TIMESTAMP [@recipient]")
        print("python telegram_sender.py improvements TIMESTAMP [@recipient]")
        sys.exit(1)
    
    action = sys.argv[1]
    timestamp = sys.argv[2]
    recipient = sys.argv[3] if len(sys.argv) > 3 else "@mmalashkin"
    
    if action == "bugs":
        success = send_bug_reports_to_telegram(timestamp, recipient)
        print("‚úÖ –ë–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!" if success else "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–æ–≤")
    elif action == "improvements":
        success = send_improvements_to_telegram(timestamp, recipient)
        print("‚úÖ –£–ª—É—á—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!" if success else "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π")
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'bugs' –∏–ª–∏ 'improvements'") 